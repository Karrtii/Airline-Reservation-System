#pragma checksum "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\Pages\Overview.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4e3de7d1b3e309a675a8ad06859afff70d993ee0"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\_Imports.razor"
using Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\_Imports.razor"
using Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\_Imports.razor"
using Blazored;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\Pages\Overview.razor"
using Client.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\Pages\Overview.razor"
using Client.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\Pages\Overview.razor"
using System.ComponentModel.DataAnnotations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\Pages\Overview.razor"
           [Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/overview")]
    public partial class Overview : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 225 "C:\Users\karrt\Desktop\All_Folders\Uni\Semester3\Semester Project Heterogeneous System (SEP3)\1 SEP3\SEP3XA20-ARS\Client\Client\Pages\Overview.razor"
       

    private FlightInfo flightInfo;
    private List<Ticket> luggage;
    private List<Passenger> passengers;
    private List<string> seats;
    private bool returning;
    private int numOfAdults;
    private int numOfChildren;
    private int totalPrice;
    private string smallLuggage;
    private string mediumLuggage;
    private string largeLuggage;
    private bool collapse = true;
    CreditModel creditModel = new CreditModel();

    protected async override Task OnInitializedAsync()
    {
        flightInfo = await flightInfoService.getFlightInfo(bookingService.getFlightID());
        returning = bookingService.IsReturning();
        numOfAdults = bookingService.getAdults();
        numOfChildren = bookingService.getChildren();
        passengers = bookingService.getPassengers();
        luggage = bookingService.getLuggage();
        seats = bookingService.getSeatInfo();
        CalculateTotal(luggage);
        CalculateLuggage(luggage);
    }

    private void CalculateTotal(List<Ticket> tickets)
    {
        foreach (Ticket t in tickets)
        {
            totalPrice += t.price;
        }
        totalPrice += bookingService.getPrice();
    }

    private void CalculateLuggage(List<Ticket> tickets)
    {
        int ll = 0;
        int ml = 0;
        int sl = 0;

        foreach (Ticket t in tickets)
        {
            if (t.luggage.Equals("Small"))
            {
                sl++;
            }
            if (t.luggage.Equals("Medium"))
            {
                ml++;
            }
            if (t.luggage.Equals("Large"))
            {
                ll++;
            }

            largeLuggage = ll + "x bag(Large)";
            mediumLuggage = ml + "x bag(Medium)";
            smallLuggage = sl + "x bag(Small)";
        }
    }

    private void CollapseOn()
    {
        collapse = false;
    }

    private async Task BookFlight()
    {
        List<string> passCheck = new List<string>();

        for (int i = 0; i < passengers.Count; i++)
        {
            passCheck.Add("false");
            passCheck[i] = await passengerService.CheckPassenger(passengers[i]);
        }
        if (passCheck.Contains("false"))
        {
            //Error
            NavigationManager.NavigateTo("/errorPage");
        }
        else
        {
            //Register passenger
            foreach (Passenger p in passengers)
            {
                await passengerService.registerPassenger(p, bookingService.getUsername());
            }

            //Check each seat availability

            //if okay reserve else error
            List<string> availability = new List<string>();
            for (int i = 0; i < seats.Count; i++)
            {
                availability.Add(await ticketService.CheckAvailability(GetSeatNumber(seats[i]), flightInfo.flight.id));
            }
            //Create ticket and reserve seat
            if (availability.Contains("false"))
            {
                //Error
                NavigationManager.NavigateTo("/errorPage");
            }
            else
            {
                for (int i = 0; i < passengers.Count; i++)
                {
                    await ticketService.BookAFlight(passengers[i].passportNumber, flightInfo.flight.id, GetSeatNumber(seats[i]), luggage[i]);
                }
                NavigationManager.NavigateTo("/success");
            }
        }
    }
    private int GetSeatNumber(string seat)
    {
        if (seat.Length == 2)
        {
            int mid = seat.Length / 2;
            String[] parts = { seat.Substring(0, mid), seat.Substring(mid) };
            int number = Convert.ToInt32(parts[0]);
            string character = parts[1];
            return CalculateByNumberAndString(number, character);
        }
        else
        {
            String[] parts = { seat.Substring(0, 2), seat.Substring(2) };
            int number = Convert.ToInt32(parts[0]);
            string character = parts[1];
            return CalculateByNumberAndString(number, character);
        }
    }
    private int CalculateByNumberAndString(int number, string character)
    {
        int sum = number * 6;
        switch (character)
        {
            case "A":
                sum -= 5;
                break;
            case "B":
                sum -= 4;
                break;
            case "C":
                sum -= 3;
                break;
            case "D":
                sum -= 2;
                break;
            case "E":
                sum -= 1;
                break;
            case "F":
                break;
        }
        return sum;
    }
    public class CreditModel
    {
        [Required]
        [Range(1000000000000000, 9999999999999999, ErrorMessage = "Please enter valid credit card number")]
        public long creditCardNumber { get; set; }
        [Required]
        [Range(000, 999, ErrorMessage = "Please enter valid cvv")]
        public int cvv { get; set; }
        [Required]
        [Range(1, 12, ErrorMessage = "Please enter valid month")]
        public int expirationMonth { get; set; }
        [Range(2020, 2050, ErrorMessage = "Please enter valid year")]
        [Required]
        public int expirationYear { get; set; }
        [Required]
        public string name { get; set; }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ITicketService ticketService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IPassengerService passengerService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IBookingService bookingService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IFlightInfoService flightInfoService { get; set; }
    }
}
#pragma warning restore 1591
