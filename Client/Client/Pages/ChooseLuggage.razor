@page "/luggage"
@using Client.Model
@using Client.Data
@namespace AddLuggageService
@inject IBookingService bookingService
@inject NavigationManager navigationManager
@attribute [Authorize]

@if (passengers != null)
{
    <div class="container py-5">
        <div class="row text-center justify-content-center">
            @for (int i = 0; i < passengers.Count; i++)
            {
                <div class="col-12 py-4 text-center my-3">
                    <h2>Choosing luggage for <span style="color: rgba(239,71,111,1);">@passengers[i].firstname</span></h2>
                </div>

                <LuggagePicker @bind-luggageType="tickets[i]" />
            }
            <button @onclick="AddLuggage" class="btn btn-primary my-3 btn-rounded">Add luggage</button>
        </div>

    </div>


}
else
{
    <p>Loading...</p>
}



@code {
    private List<Passenger> passengers = new List<Passenger>();
    private List<Ticket> tickets = new List<Ticket>();

    protected async override Task OnInitializedAsync()
    {
        for (int i = 0; i < 11; i++)
        {
            tickets.Add(new Ticket(0, "None"));
        }

        passengers = new List<Passenger>(bookingService.getPassengers());
        await base.OnInitializedAsync();
    }

    private void AddLuggage()
    {
        tickets.RemoveRange(passengers.Count, 11 - passengers.Count);
        bookingService.SaveLuggageData(tickets);
        navigationManager.NavigateTo("/reserveSeat");
    }
}
